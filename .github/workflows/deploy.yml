name: Build

on: 
  workflow_dispatch:

  push:
    branches:
      - master
      
jobs:
  build-and-test:
    name: "Build and Test"
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: lambda-docker-python
      AWS_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STAGE: prod

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1       

      - name: Build and deploy container
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: test/docker-lambda
          IMAGE_TAG: ${{ github.sha }}
        run: |-
          dotnet publish --configuration Release --output 'artifacts'
          docker build -f Dockerfile . -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install Serverless Framework
        run:  npm i -g serverless@2.66.2

      - name: Deploy service
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo $IMAGE_TAG
          export IMAGE_TAG=$IMAGE_TAG
          sls deploy --stage $STAGE --region $AWS_REGION